// 数组的排序：冒泡排序
// 冒泡排序的简易写法
package main

import (
	"fmt"
)

func main() {
	arr := [5]int{15, 23, 8, 10, 7}
	// 升序：[7,8,10,15,23]
	// 降序：[23,15,10,8,7]
	a := len(arr)
	/*
		注意：
		i 的赋值要从 1 开始，而不是 0 。举例说明：本例中已知 arr 的长度是 5 ，所以需要的排序轮数是 4 轮。
		如果使用 i := 0; i < a ，这里 a = 5 ，那么就会让排序进行 5 轮，最后一轮其实是多余的。
		所以使用 i := 1; i < a ，每次循环 i 分别赋值为 1、2、3、4，即刚好进行 4 轮排序。
	*/
	for i := 1; i < a; i++ {
		for j := 0; j < a-1; j++ {
			if arr[j] > arr[j+1] {
				arr[j], arr[j+1] = arr[j+1], arr[j]
			}
		}
	}
	fmt.Println(arr) // [7 8 10 15 23]
}
